import asyncio
import logging

from aiogram.dispatcher import FSMContext
from aiogram.types import Message

import parsing
import keyboards
import states
from loader import dp


@dp.message_handler(state=states.FullVariant.send_variant)
async def send_variant(message: Message, state: FSMContext):
    print('full')
    await message.answer('‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –≤–∞—Ä–∏–∞–Ω—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è')
    variant = parsing.generate_random_variant()

    await state.update_data(variant=variant)

    await message.answer(
        "üéâ –í–∞—Ä–∏–∞–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω \n",
        reply_markup=keyboards.inline.variant_task_buttons)

    await states.FullVariant.next()


@dp.message_handler(state=states.FullVariant.enter_answer)
async def enter_answer(message: Message, state: FSMContext):
    print(9)
    # getting task data from state vars
    data = await state.get_data()
    variant = data.get('variant')


    answer = message.text
    answer.strip()

    await state.update_data(answer=answer)

    await message.answer(f'–í–∞—à –æ—Ç–≤–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω')
    await state.finish()
