import json

from aiogram.dispatcher import FSMContext
from aiogram.types import Message


from loader import dp
import keyboards
import states


@dp.message_handler(state=states.Theory.enter_number)
async def enter_number(message: Message, state: FSMContext):
    task_number = message.text
    try:
        if int(task_number) < 1 or int(task_number) > 27:
            raise ValueError

        theory_links = json.load(open('data/theory/theory_links.json', 'r'))
        videos_links = json.load(open('data/theory/videos_links.json', 'r') )

        await message.answer(f'–ó–∞–¥–∞—á–∞ ‚Ññ{str(task_number)}\n'
                             f'üé¨ –ü–æ —ç—Ç–æ–π —Ç–µ–º–µ –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ:\n'
                             f'{videos_links[task_number]}\n'
                             f'üìï –ò–ª–∏ –ø–æ—á–∏—Ç–∞—Ç—å —Ç–µ–æ—Ä–∏—é –Ω–∞ —Å–∞–π—Ç–µ:\n'
                             f'{theory_links[task_number]}', reply_markup=keyboards.default.main_menu)
        await state.finish()

    except ValueError:
        "if task_number isn't int"
        await message.answer("‚ö† –ù–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è - —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 27, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑")
        await states.Theory.enter_number.set()
